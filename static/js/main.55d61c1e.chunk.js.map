{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","routes/Lotto.js","routes/Wave.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","console","log","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetsArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","orderBy","get","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","faGrinStars","Lotto","lotto","i","lotto_num","Math","floor","random","j","sort","b","href","Wave","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55d61c1e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const { target: { name, value } } = event;\r\n        console.log(value)\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault(); //기본행위 실행x\r\n        let data;\r\n        try {\r\n            if (newAccount) {\r\n                // account가 true면 새 계정 생성\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                // 아니면 로그인\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        }\r\n        catch (error) {\r\n            setError(error.message);\r\n        }\r\n        console.log(data);\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount(prev => !prev); //이전값을 가져와서 그 값의 반대되는 것을 리턴\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={onChange} className=\"authInput\" required />\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={onChange} className=\"authInput\" required />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\" />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n\r\n    const onSocialClick = async (event) => {\r\n        const { target: { name }, } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);  // true  false로 edit모드인지 확인\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);  // input에 입력된 text 업데이트\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"정말 삭제하시겠슴둥?\");\r\n        console.log(ok)\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete(); // documentPath = 위치\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete(); // 사진 삭제\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(nweetObj, newNweet);\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false); // submit하면 edit모드 끄기\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input type=\"text\"\r\n                            onChange={onChange}\r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            required\r\n                            autoFocus\r\n                            className=\"formInput\" />\r\n                        <input type=\"submit\" value=\"Upadte Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                    {isOwner && (\r\n                        <div class=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`); //이미지의 path, child를 가짐(파일에 대한 reference)\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value }, } = event;    // event안의 target안의 value추출\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const { target: { files }, } = event; //event안에서 target안으로 가서 files를 받아옴\r\n        const theFile = files[0]; // file을 갖고 ( 첫 번째 하나만)\r\n        const reader = new FileReader(); // reader를 만든 다음\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile); // 파일을 읽음\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"오늘은 무슨일이 있었어??\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n\r\n            <input id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }} />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect(() => { // component가 mount될때\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const nweetsArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetsArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import React, { useEffect, useState } from \"react\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) { // 변경 x상태에서 누르면 업데이트x\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService\r\n            .collection(\"nweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid) // where - 필터링하는 방법을 알려줌\r\n            .orderBy(\"createdAt\")\r\n            .get();\r\n        console.log(nweets.docs.map((doc) => doc.data()));\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input onChange={onChange} type=\"text\" className=\"formInput\" placeholder=\"Display name\" value={newDisplayName} autoFocus />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }} />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faGrinStars, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                            ? `${userObj.displayName}의 Profile`\r\n                            : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/lotto\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faGrinStars} color={\"#04aaFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\n\r\nconst Lotto = () => {\r\n    var lotto = [];\r\n\r\n    for (var i = 0; i < 6; i++) {\r\n        var lotto_num = Math.floor(Math.random() * 44) + 1;\r\n\r\n        for (var j in lotto) {\r\n            if (lotto_num === lotto[j]) {\r\n                lotto_num = Math.floor(Math.random() * 44) + 1;\r\n            }\r\n        }\r\n        lotto.push(lotto_num); // push - 배열의 마지막에 값 추가 메소드\r\n    }\r\n\r\n    // 오름차순으로 숫자 정렬\r\n    lotto.sort(function (a, b) {\r\n        return a - b;\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <p>다음 회차 로또 1등 번호는</p>\r\n            <p className=\"my_lotto\">{lotto + \" \"}</p>\r\n            <a className=\"lotto_result\" href=\"https://dhlottery.co.kr/gameResult.do?method=byWin\">당첨번호 확인하기</a>\r\n        </div>\r\n    );\r\n}\r\nexport default Lotto;","const Wave = () => {\r\n    return (\r\n        <div className='box'>\r\n            <div className='wave -one'></div>\r\n            <div className='wave -two'></div>\r\n            <div className='wave -three'></div>\r\n            <div className='title'>개발 연습중</div>\r\n        </div>\r\n    );\r\n}\r\nexport default Wave;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Lotto from \"routes/Lotto\";\r\nimport Wave from \"routes/Wave\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n\r\n\r\n        <Router>\r\n            <Wave />\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                        <Route exact path=\"/lotto\">\r\n                            <Lotto />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false); //아직 초기화 x\n  const [userObj, setUserObj] = useState(null); //userObj의 출발점 -> Router.js\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n\n        if (user.displayName === null) {\n          user.updateProfile({ displayName: \"새로운 유저\", });\n        }\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => { // user를 새로고침\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"기달기달 기달기달\"}\n    </>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./style.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}