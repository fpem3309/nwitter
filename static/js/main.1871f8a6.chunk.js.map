{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","routes/Lotto.js","routes/Wave.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","console","log","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","date","Date","createdAt","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","toggleEditing","update","autoFocus","src","alt","faPencilAlt","faTrash","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetsArray","docs","map","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","isOpen","setMenu","to","faQuran","faUser","faGrinStars","faInstagram","href","faBlog","faYoutube","faBars","Lotto","lotto","i","lotto_num","Math","floor","random","j","sort","b","Wave","AppRouter","isLoggedIn","maxWidth","width","margin","display","justifyContent","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1871f8a6.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const { target: { name, value } } = event;\r\n        console.log(value)\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault(); //기본행위 실행x\r\n        let data;\r\n        try {\r\n            if (newAccount) {\r\n                // account가 true면 새 계정 생성\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                // 아니면 로그인\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        }\r\n        catch (error) {\r\n            setError(error.message);\r\n        }\r\n        console.log(data);\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount(prev => !prev); //이전값을 가져와서 그 값의 반대되는 것을 리턴\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" value={email} onChange={onChange} className=\"authInput\" required />\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" value={password} onChange={onChange} className=\"authInput\" required />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\" />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n\r\n    const onSocialClick = async (event) => {\r\n        const { target: { name }, } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n\r\n    const [editing, setEditing] = useState(false);  // true  false로 edit모드인지 확인\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);  // input에 입력된 text 업데이트\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"ㄹㅇ 삭제??\");\r\n        console.log(ok)\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete(); // documentPath = 위치\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete(); // 사진 삭제\r\n        }\r\n    };\r\n\r\n    const date = new Date(nweetObj.createdAt);\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    const hour = date.getHours();\r\n    const minute = date.getMinutes();\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(nweetObj, newNweet);\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false); // submit하면 edit모드 끄기\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input type=\"text\"\r\n                            onChange={onChange}\r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            required\r\n                            autoFocus\r\n                            className=\"formInput\" />\r\n                        <input type=\"submit\" value=\"Upadte Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    <h4>{year}-{month}-{day} {hour}:{minute}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} alt=\"upload_img\" />}\r\n                    {isOwner && (\r\n                        <div className=\"nweet__actions\">\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`); //이미지의 path, child를 가짐(파일에 대한 reference)\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n        console.log(nweetObj);\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value }, } = event;    // event안의 target안의 value추출\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const { target: { files }, } = event; //event안에서 target안으로 가서 files를 받아옴\r\n        const theFile = files[0]; // file을 갖고 ( 첫 번째 하나만)\r\n        const reader = new FileReader(); // reader를 만든 다음\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile); // 파일을 읽음\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"오늘은 뭐했어??\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n\r\n            <input id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }} />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                        alt=\"pre_img\"\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect(() => { // component가 mount될때\r\n        dbService.collection(\"nweets\").orderBy('createdAt', 'desc').onSnapshot((snapshot) => {\r\n            const nweetsArray = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetsArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router\";\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut()\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) { // 변경 x상태에서 누르면 업데이트x\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input onChange={onChange} type=\"text\" className=\"formInput\" placeholder=\"Display name\" value={newDisplayName} autoFocus />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }} />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\nexport default Profile;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { faBars, faBlog, faGrinStars, faQuran, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faInstagram, faYoutube } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    const [isOpen, setMenu] = useState(false);  // 메뉴의 초기값을 false로 설정\r\n    const toggleMenu = () => {\r\n        setMenu(isOpen => !isOpen); // on, off 개념 boolean\r\n    }\r\n    return (\r\n        <>\r\n            <nav className=\"navbar\">\r\n                <div>\r\n                    <Link to=\"#\">Home coding</Link>\r\n                </div>\r\n\r\n                <ul className={isOpen ? \"nav_menu\" : \"hide_nav_menu\"}>\r\n                    <li><FontAwesomeIcon icon={faQuran} color={\"#04AAFF\"} /><Link to=\"/\">{userObj.displayName}의 Diary</Link></li>\r\n                    <li><FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} /><Link to=\"/profile\" >{userObj.displayName}의 Profile</Link></li>\r\n                    <li><FontAwesomeIcon icon={faGrinStars} color={\"#04aaFF\"} /><Link to=\"/lotto\" >Lotto 자동뽑기!</Link></li>\r\n                    <li><Link to=\"/\" >test item</Link></li>\r\n                    <li><Link to=\"/\" >test item</Link></li>\r\n                    <li><Link to=\"/\" >test item</Link></li>\r\n                    <li><Link to=\"/\" >test item</Link></li>\r\n                </ul>\r\n\r\n                <ul className=\"nav_icon\">\r\n                    <li><FontAwesomeIcon icon={faInstagram} color={\"#04aaFF\"} /><a href=\"https://www.instagram.com/k_gwan/\">Instagram</a></li>\r\n                    <li><FontAwesomeIcon icon={faBlog} color={\"#04aaFF\"} /><a href=\"https://fpem3309.tistory.com/\">Blog</a></li>\r\n                    <li><FontAwesomeIcon icon={faYoutube} color={\"#04aaFF\"} /><a href=\"https://www.youtube.com/channel/UCNhofiqfw5nl-NeDJkXtPvw\" >Pani</a></li>\r\n                </ul>\r\n\r\n                <button href=\"#\" className=\"nav_toogleBtn\" onClick={() => toggleMenu()}>\r\n                    <FontAwesomeIcon icon={faBars} color={\"#04aaFF\"} />\r\n                </button>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\nexport default Navigation;","import React from \"react\";\r\n\r\nconst Lotto = () => {\r\n    var lotto = [];\r\n\r\n    for (var i = 0; i < 6; i++) {\r\n        var lotto_num = Math.floor(Math.random() * 44) + 1;\r\n\r\n        for (var j in lotto) {\r\n            if (lotto_num === lotto[j]) {\r\n                lotto_num = Math.floor(Math.random() * 44) + 1;\r\n            }\r\n        }\r\n        lotto.push(lotto_num); // push - 배열의 마지막에 값 추가 메소드\r\n    }\r\n\r\n    // 오름차순으로 숫자 정렬\r\n    lotto.sort(function (a, b) {\r\n        return a - b;\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <p>다음 회차 로또 1등 번호는</p>\r\n            <p className=\"my_lotto\">{lotto + \" \"}</p>\r\n            <a className=\"lotto_result\" href=\"https://dhlottery.co.kr/gameResult.do?method=byWin\">당첨번호 확인하기</a>\r\n        </div>\r\n    );\r\n}\r\nexport default Lotto;","import { faInstagram, faYoutube } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faBars, faBlog, faGrinStars, faQuran, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Wave = () => {\r\n    return (\r\n        <>\r\n            <div className='box'>\r\n                <div className='wave -one'></div>\r\n                <div className='wave -two'></div>\r\n                <div className='wave -three'></div>\r\n                <div className='title'>React 연습중</div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Wave;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Lotto from \"routes/Lotto\";\r\nimport Wave from \"routes/Wave\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n\r\n\r\n        <Router>\r\n            <Wave userObj={userObj} />\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                        <div\r\n                            style={{\r\n                                maxWidth: 890,\r\n                                width: \"100%\",\r\n                                margin: \"0 auto\",\r\n                                marginTop: 80,\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                            }}\r\n                        >\r\n                            <Route exact path=\"/\">\r\n                                <Home userObj={userObj} />\r\n                            </Route>\r\n                            <Route exact path=\"/profile\">\r\n                                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                            </Route>\r\n                            <Route exact path=\"/lotto\">\r\n                                <Lotto />\r\n                            </Route>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth />\r\n                        </Route>\r\n                    </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false); //아직 초기화 x\n  const [userObj, setUserObj] = useState(null); //userObj의 출발점 -> Router.js\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n\n        if (user.displayName === null) {\n          user.updateProfile({ displayName: \"새로운 유저\", });\n        }\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => { // user를 새로고침\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"기달기달 기달기달\"}\n    </>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./style.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}